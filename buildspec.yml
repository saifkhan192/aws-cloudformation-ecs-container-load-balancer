version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...v1
      - aws --version
      # - env
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      # - REPOSITORY_URI=990844713352.dkr.ecr.us-east-1.amazonaws.com/core-deployment-ecr-repo
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPO}
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - echo "Image1 >> ${REPOSITORY_URI}:${IMAGE_TAG}"
      - echo "Image2 >> ${DOCKER_IMAGE_URL}:${IMAGE_TAG}"
      - echo ">> pre_build is done"
  build:
    commands:
      - echo Building the Docker image...
      - echo "Image3 >> ${DOCKER_IMAGE_URL}:${IMAGE_TAG}"
      - docker build -t $DOCKER_IMAGE_URL:latest .
      - docker tag $DOCKER_IMAGE_URL:latest $DOCKER_IMAGE_URL:$IMAGE_TAG
      - echo ">> build is done"

  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $DOCKER_IMAGE_URL:latest
      - docker push $DOCKER_IMAGE_URL:$IMAGE_TAG
      - printf '[{"name":"demo-app","imageUri":"%s"}]' $DOCKER_IMAGE_URL:$IMAGE_TAG > demo-app.json
      - printf '[{"name":"demo-worker","imageUri":"%s"}]' $DOCKER_IMAGE_URL:$IMAGE_TAG > demo-worker.json
      - cat demo-app.json && cat demo-worker.json
      - pwd && ls
      - echo ">> post_build is done"
artifacts:
  files:
    - demo-app.json
    - demo-worker.json
